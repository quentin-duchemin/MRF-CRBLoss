{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Estimation of parameters\n",
    "\n",
    "In this tutorial, we show an detailed example of how you can use a pre-trained neural network to estimate biomarkers from input signals. We use the network that we trained to obtain the results presented in our paper. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import sys\n",
    "depth = '../'\n",
    "for i in range(5):\n",
    "    sys.path.append(depth)\n",
    "    depth += '../'\n",
    "import os\n",
    "from os.path import isfile, join\n",
    "import importlib\n",
    "import numpy as np\n",
    "import torch\n",
    "import scipy as sc\n",
    "from scipy.io import loadmat\n",
    "import pickle\n",
    "import MRF\n",
    "from MRF.Training_parameters import *\n",
    "from MRF.BaseModel import *\n",
    "from MRF.Projection import *\n",
    "from MRF.models import *\n",
    "from MRF.Offline import Network, Data_class, Performances\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "root = '../../../../'"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 1) Description of the processed signals\n",
    "\n",
    "In order to preserve anonymity of MRI volunteers, we do not provide the data corresponding to the reconstructed images obtained from a full scan. We will be focused on a specific slice and show how we can use our pre-trained networks to get results. The data corresponding to this specific slice can be found in the folder `paper_data`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "test_slice = sc.io.loadmat(root+'paper_data/invivo_test_slice.mat')['x']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2) Parameters estimation\n",
    "\n",
    "We use our pre-trained neural network to estimate the three parameters $m_0^s$, $T_1^f$ and $T_2^f$."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We define a directory to save results."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "save_root='/NN_recon/'\n",
    "if not os.path.exists(save_root):\n",
    "    os.makedirs(save_root)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We give the list of the names of the trained networks that we want to use to process data. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "names = [ 'CRB-paper']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We give the list of paths where we saved the input signals that we want to process using the above mentioned pre-trained networks."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "data_files = ['paper_data/invivo_test_slice.mat']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'name' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-6-9ceb51fc5ad2>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[1;32mwith\u001b[0m \u001b[0mopen\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mroot\u001b[0m\u001b[1;33m+\u001b[0m\u001b[1;34m'settings_files_offline/settings_'\u001b[0m\u001b[1;33m+\u001b[0m\u001b[0mname\u001b[0m\u001b[1;33m+\u001b[0m\u001b[1;34m'.pkl'\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;34m'rb'\u001b[0m\u001b[1;33m)\u001b[0m \u001b[1;32mas\u001b[0m \u001b[0mf\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m      2\u001b[0m         \u001b[0msettings\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mpickle\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mload\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mf\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      3\u001b[0m         \u001b[0mprint\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0msettings\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mNameError\u001b[0m: name 'name' is not defined"
     ]
    }
   ],
   "source": [
    "with open(root+'settings_files_offline/settings_'+name+'.pkl', 'rb') as f:\n",
    "        settings = pickle.load(f)\n",
    "        print(settings)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We compute the estimate of the parameters and we save the results."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/NN_recon/qM_per_data/invivo_test_slice_CRB-paper.mat\n",
      "done results\n",
      "processing_time\n",
      "3.6539628505706787\n",
      "total_time\n",
      "3.903989315032959\n"
     ]
    }
   ],
   "source": [
    "t_1 = time.time()\n",
    "for name, data_file in zip(names, data_files):\n",
    "    filepath = os.path.join(root, data_file)\n",
    "    with open(root+'settings_files_offline/settings_'+name+'.pkl', 'rb') as f:\n",
    "        settings = pickle.load(f)\n",
    "        \n",
    "        ##################\n",
    "        # Neural Network Architecture #\n",
    "        ##################\n",
    "        model = importlib.import_module('MRF.models.' + settings['name_model'])\n",
    "        \n",
    "        settings['namepca'] = root+'/paper_data/basis_for_compress.mat'\n",
    "\n",
    "        ##################\n",
    "        # Loading the pre-trained network #\n",
    "        ##################\n",
    "        net = torch.load(join(root,'save_networks_offline/network_'+settings['name_model']),map_location='cpu')\n",
    "        training_parameters = Training_parameters(settings['batch_size'], 1, settings['nb_epochs'], settings['params'], settings['normalization'], settings['complex'])\n",
    "        projection = Projection(settings['start_by_projection'], settings['dimension_projection'], settings['initialization'], settings['normalization'], settings['namepca'], settings['complex'])\n",
    "        data_class = Data_class(training_parameters, settings['noise_type'], settings['noise_level'],\n",
    "                                           settings['minPD'], settings['maxPD'], settings['nb_files'], settings['path_files'])\n",
    "        validation_settings = {'validation': settings['validation'],'small_validation_size': settings['small_validation_size'], 'validation_size': settings['validation_size']}\n",
    "        netw = model.model(projection=projection,nb_params=len(settings['params']))\n",
    "        device = torch.device('cpu')\n",
    "        try:\n",
    "            netw.load_state_dict(net['NN'])\n",
    "        except:\n",
    "            projection = Projection(settings['start_by_projection'], settings['dimension_projection'], 'Fixlayer', settings['normalization'], settings['namepca'], settings['complex'], ghost=True)\n",
    "            netw = model.model(projection=projection,nb_params=len(settings['params']))\n",
    "            netw.load_state_dict(net['NN'])\n",
    "        netw.eval()\n",
    "\n",
    "        ##################\n",
    "        # Importing data #\n",
    "        ##################\n",
    "        import h5py\n",
    "        import numpy as np\n",
    "        try:\n",
    "            from scipy.io import loadmat\n",
    "            arrays = loadmat(filepath)\n",
    "            fingers = arrays['x']\n",
    "            fingers = fingers.T\n",
    "        except:\n",
    "            arrays = {}\n",
    "            f = h5py.File(filepath, 'r')\n",
    "            for k, v in f.items():\n",
    "                 arrays[k] = np.array(v)\n",
    "            fingers = arrays['x']\n",
    "        t_2 = time.time()\n",
    "        \n",
    "        ##################\n",
    "        # Preparing the neural network by removing the potential first projection layer #\n",
    "        ##################\n",
    "        projection.initialization = 'Fixlayer'\n",
    "        netwproj = model.model(projection=projection,nb_params=len(settings['params']))\n",
    "        device = torch.device('cpu')\n",
    "        dico = net['NN']\n",
    "        try:\n",
    "            if net['complex']:\n",
    "                del dico['fc1_real.weight']\n",
    "                del dico['fc1_imag.weight']\n",
    "            else:\n",
    "                del dico['fc1.weight']\n",
    "        except:\n",
    "            pass\n",
    "        mrfshape = fingers.shape\n",
    "        netwproj.load_state_dict(dico, strict=False)\n",
    "        netwproj.eval()\n",
    "        \n",
    "        ##################\n",
    "        # Estimating the biophysical parameters #\n",
    "        ##################\n",
    "        with torch.no_grad():\n",
    "            if len(mrfshape)<=3:\n",
    "                mrfshape = np.hstack((mrfshape,[1]))\n",
    "            fings = fingers.reshape((-1, mrfshape[1],mrfshape[2] * mrfshape[3]))\n",
    "            sequence_to_stack = []\n",
    "            for i in range(mrfshape[1]):\n",
    "                fings_tmp = fings[:,i,:].T\n",
    "                params_tmp = netwproj(torch.tensor(fings_tmp, dtype=torch.float))\n",
    "                params_tmp = np.array(params_tmp)\n",
    "                for ii, para in enumerate(settings['params']):\n",
    "                    if settings['loss'][para] == 'MSE-Log':\n",
    "                        params_tmp[:, ii] = 10 ** params_tmp[:, ii]\n",
    "                params_tmp = params_tmp.reshape((mrfshape[2],mrfshape[3],len(settings['params'])))\n",
    "                sequence_to_stack.append(params_tmp)\n",
    "            params = np.stack(sequence_to_stack,axis=0)\n",
    "            \n",
    "        ##################\n",
    "        # Saving results and displaying processing time #\n",
    "        ##################\n",
    "        processing_time = time.time() - t_2\n",
    "        params = np.moveaxis(params, [0, 2], [2, 0])\n",
    "        total_time = time.time() - t_1\n",
    "        print(os.path.join(save_root, 'qM_'+data_file[2:-4]+ '_'+name+'.mat'))\n",
    "        print('done results')\n",
    "        print('processing_time')\n",
    "        print(processing_time)\n",
    "        print('total_time')\n",
    "        print(total_time)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x216 with 6 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(len(net['params'])//3,3, figsize=(15,3))\n",
    "\n",
    "ranges = [[0,0.3],[1,4],[50,150]]\n",
    "scaling = [1,1,1e3]\n",
    "units = ['',' (s)',' (ms)']\n",
    "for i, ind in enumerate(net['params']):\n",
    "    shw = ax[i].imshow(scaling[i]*params[0,:,:,i].T)\n",
    "    ax[i].set_title(paramtolatexname[ind]+units[i], size=16)\n",
    "    plt.colorbar(shw, ax=ax[i], boundaries=np.linspace(ranges[i][0],ranges[i][1],5))\n",
    "    ax[i].axis('off')\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
